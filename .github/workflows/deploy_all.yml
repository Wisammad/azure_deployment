name: Deploy Infrastructure and Application

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: acrwisamm2024
  IMAGE_NAME: pythonapp
  RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  APP_NAME: app-wisamm-2024
  KEY_VAULT_NAME: kv-wisamm-2024
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: acr-username
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: acr-password1

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Deploy Infrastructure
      run: |
        az bicep install
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file infra/main.bicep \
          --parameters @infra/parameters.json

    - name: Verify Key Vault Access
      run: |
        az keyvault show --name ${{ env.KEY_VAULT_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
        az keyvault secret list --vault-name ${{ env.KEY_VAULT_NAME }}

  deploy-application:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get docker registry credentials from Key Vault
        run: |
          REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          echo "REGISTRY_USERNAME=${REGISTRY_USERNAME}" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=${REGISTRY_PASSWORD}" >> $GITHUB_ENV

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "version=$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and push image
        working-directory: ./app
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }} 